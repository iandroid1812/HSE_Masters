batch_size: 100
data_dir: Datasets/market/market.csv
dropout: 0.9
epochs: 200
features:
- Adj Close
- Open
- High
- Low
- Volume
frequency: 5
learning_rate: 0.001
loss_function: !!python/object:torch.nn.modules.loss.MSELoss
  _backward_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _buffers: !!python/object/apply:collections.OrderedDict
  - []
  _forward_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _forward_pre_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _is_full_backward_hook: null
  _load_state_dict_post_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _load_state_dict_pre_hooks: !!python/object/apply:collections.OrderedDict
  - []
  _modules: !!python/object/apply:collections.OrderedDict
  - []
  _non_persistent_buffers_set: !!set {}
  _parameters: !!python/object/apply:collections.OrderedDict
  - []
  _state_dict_hooks: !!python/object/apply:collections.OrderedDict
  - []
  reduction: mean
  training: true
monitor: val_loss
n_features: 5
n_hidden: 128
n_layers: 2
num_workers: 0
optimizer: !!python/name:torch.optim.adam.Adam ''
patience: 30
scaler: !!python/object:sklearn.preprocessing._data.StandardScaler
  _sklearn_version: 1.1.3
  copy: true
  with_mean: true
  with_std: true
scheduler: !!python/name:torch.optim.lr_scheduler.StepLR ''
sequence_length: 15
target:
- Returns
test_size: 0.3
ticker: MSFT
val_size: 0.8
version: MSFT
